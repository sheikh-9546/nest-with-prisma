
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Status {
  ACTIVE
  INACTIVE
  PENDING
}

model User {
  id           String     @id @default(uuid())
  firstName    String?   @map("first_name")
  lastName     String?   @map("last_name")
  email        String     @unique
  phoneNumber  String     @unique @map("phone_number")
  password     String
  refreshToken String?   @map("refresh_token")
  userRoles    UserRole[]
  profilePic   String?    @map("profile_pic")
  status       Status     @default(PENDING)
  createdBy    Int?       @map("created_by")
  updatedBy    Int?       @map("updated_by")
  deletedAt    DateTime?  @map("deleted_at")
  createdAt    DateTime   @default(now())  @map("created_at")
  updatedAt    DateTime   @updatedAt  @map("updated_at")

  @@map("users")
}

model Role {
  id        Int        @id @default(autoincrement())
  roleName  String     @unique @map("role_name")
  userRoles UserRole[]

  @@map("roles")
}

model UserRole {
  user   User   @relation(fields: [userId], references: [id])
  userId String @map("user_id")
  role   Role   @relation(fields: [roleId], references: [id])
  roleId Int  @map("role_id")

  @@id([userId, roleId])

  @@map("user_roles")
}

model Audit {
  id        String   @id @default(uuid()) // Unique ID for each log
  userId    String   @map("user_id")
  action    String // Action performed (CREATE, UPDATE, DELETE)
  model     String // Name of the model/entity affected (e.g., User, Order)
  modelId   String @map("model_id")
  changes   Json? // Store changes as JSON for update actions
  createdAt DateTime @default(now()) @map("created_at")

  @@map("audits")
}